[{"/Users/admin/Documents/dev/oss/connected.ui/src/components/Groups/Group.tsx":"1","/Users/admin/Documents/dev/oss/connected.ui/src/index.tsx":"2","/Users/admin/Documents/dev/oss/connected.ui/src/models/GroupModel.tsx":"3","/Users/admin/Documents/dev/oss/connected.ui/src/models/PostModel.tsx":"4","/Users/admin/Documents/dev/oss/connected.ui/src/requests/CreateNewPost.tsx":"5","/Users/admin/Documents/dev/oss/connected.ui/src/requests/CreateNewGroup.tsx":"6","/Users/admin/Documents/dev/oss/connected.ui/src/components/Users/Register.tsx":"7","/Users/admin/Documents/dev/oss/connected.ui/src/components/Users/Login.tsx":"8","/Users/admin/Documents/dev/oss/connected.ui/src/components/Posts/Post.tsx":"9","/Users/admin/Documents/dev/oss/connected.ui/src/requests/RegisterRequest.tsx":"10","/Users/admin/Documents/dev/oss/connected.ui/src/models/CommentModel.tsx":"11","/Users/admin/Documents/dev/oss/connected.ui/src/components/Posts/Comment.tsx":"12","/Users/admin/Documents/dev/oss/connected.ui/src/requests/CreateNewPostComment.tsx":"13","/Users/admin/Documents/dev/oss/connected.ui/src/validators/LoginValidator.tsx":"14","/Users/admin/Documents/dev/oss/connected.ui/src/components/Intro.tsx":"15","/Users/admin/Documents/dev/oss/connected.ui/src/components/GroupList.tsx":"16","/Users/admin/Documents/dev/oss/connected.ui/src/components/Home.tsx":"17","/Users/admin/Documents/dev/oss/connected.ui/src/utils/api.tsx":"18","/Users/admin/Documents/dev/oss/connected.ui/src/components/Groups.tsx":"19","/Users/admin/Documents/dev/oss/connected.ui/src/requests/LoginRequest.tsx":"20","/Users/admin/Documents/dev/oss/connected.ui/src/models/UserModel.tsx":"21","/Users/admin/Documents/dev/oss/connected.ui/src/validators/RegistrationValidator.tsx":"22","/Users/admin/Documents/dev/oss/connected.ui/src/components/Contact.tsx":"23","/Users/admin/Documents/dev/oss/connected.ui/src/components/UserPanel.tsx":"24","/Users/admin/Documents/dev/oss/connected.ui/src/components/Users/UserView.tsx":"25"},{"size":2145,"mtime":1607642962725,"results":"26","hashOfConfig":"27"},{"size":500,"mtime":1607470371476,"results":"28","hashOfConfig":"27"},{"size":638,"mtime":1607544103144,"results":"29","hashOfConfig":"27"},{"size":690,"mtime":1607557089089,"results":"30","hashOfConfig":"27"},{"size":109,"mtime":1607546360503,"results":"31","hashOfConfig":"27"},{"size":284,"mtime":1607527499188,"results":"32","hashOfConfig":"27"},{"size":3103,"mtime":1607638848554,"results":"33","hashOfConfig":"27"},{"size":3319,"mtime":1607643068888,"results":"34","hashOfConfig":"27"},{"size":1991,"mtime":1607638848553,"results":"35","hashOfConfig":"27"},{"size":287,"mtime":1607527447275,"results":"36","hashOfConfig":"27"},{"size":447,"mtime":1607556899644,"results":"37","hashOfConfig":"27"},{"size":551,"mtime":1607638848552,"results":"38","hashOfConfig":"27"},{"size":115,"mtime":1607556409870,"results":"39","hashOfConfig":"27"},{"size":152,"mtime":1607529450679,"results":"40","hashOfConfig":"27"},{"size":2457,"mtime":1607704175182,"results":"41","hashOfConfig":"27"},{"size":1320,"mtime":1607643338647,"results":"42","hashOfConfig":"27"},{"size":2551,"mtime":1607703688185,"results":"43","hashOfConfig":"27"},{"size":821,"mtime":1607642868168,"results":"44","hashOfConfig":"27"},{"size":3035,"mtime":1607643544721,"results":"45","hashOfConfig":"27"},{"size":210,"mtime":1607529367317,"results":"46","hashOfConfig":"27"},{"size":288,"mtime":1607556651036,"results":"47","hashOfConfig":"27"},{"size":179,"mtime":1607529406208,"results":"48","hashOfConfig":"27"},{"size":3887,"mtime":1607703531467,"results":"49","hashOfConfig":"27"},{"size":1247,"mtime":1607704475959,"results":"50","hashOfConfig":"27"},{"size":265,"mtime":1607704381971,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ln97uj",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Documents/dev/oss/connected.ui/src/components/Groups/Group.tsx",["107","108","109","110"],"/Users/admin/Documents/dev/oss/connected.ui/src/index.tsx",[],["111","112"],"/Users/admin/Documents/dev/oss/connected.ui/src/models/GroupModel.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/models/PostModel.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/requests/CreateNewPost.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/requests/CreateNewGroup.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/components/Users/Register.tsx",["113","114"],"import React from \"react\";\nimport { useState } from \"react\";\nimport RegisterRequest from \"../../requests/RegisterRequest\";\nimport { v } from \"../../validators/RegistrationValidator\";\n\nconst Register = (props: any) => {\n  console.log(props.logged)\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [isLoggedIn, setIsLoggedIn] = useState(token!?.length > 0);\n\n\n  const handleLoginChange = (e: any) => {\n    setLogin(e.target.value)\n  }\n  const handlePasswordChange = (e: any) => {\n    setPassword(e.target.value)\n  }\n  const handleEmailChange = (e: any) => {\n    setEmail(e.target.value)\n  }\n  const handleRegister = async () => {\n    const isValid = v.validate(login, password, email);\n    if (!isValid) {\n      console.error(\"nope!\");\n    }\n\n    const request = new RegisterRequest(login, password, email);\n    const response = await fetch(\"https://localhost:5001/users\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request)\n    })\n    console.log(response.status)\n    if (response.status !== 201) {\n      console.error(\"something went wrong\")\n    }\n\n  }\n  return (\n    <div>\n      {!isLoggedIn ?\n        <>\n          <form>\n            <div className=\"container\">\n              <div className=\"row mt-1\">\n                <div className=\"input-group mb-1\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"basic-addon1\">Login</span>\n                  </div>\n                  <input type=\"text\" onChange={handleLoginChange} className=\"form-control\" placeholder=\"\" aria-label=\"Username\"\n                    aria-describedby=\"basic-addon1\" />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-group mb-1\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"basic-addon1\">Password</span>\n                  </div>\n                  <input type=\"password\" onChange={handlePasswordChange} className=\"form-control\" placeholder=\"\" aria-label=\"Password\"\n                    aria-describedby=\"basic-addon1\" />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-group mb-1\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"basic-addon1\">Email</span>\n                  </div>\n                  <input type=\"email\" onChange={handleEmailChange} className=\"form-control\" placeholder=\"\" aria-label=\"Email\"\n                    aria-describedby=\"basic-addon1\" />\n                </div>\n              </div>\n            </div>\n          </form>\n          <button className=\"btn btn-primary btn-block\" onClick={handleRegister} >Register</button>\n        </> : <p>Please logout first to create another account</p>}\n    </div>\n  )\n}\n\nexport default Register;","/Users/admin/Documents/dev/oss/connected.ui/src/components/Users/Login.tsx",["115","116"],"import { useState } from \"react\";\nimport { lv } from \"../../validators/LoginValidator\";\nimport LoginRequest from '../../requests/LoginRequest'\nimport React from \"react\";\nimport { Post as POST } from \"../../utils/api\";\n\nconst Login = (props: any) => {\n  console.log(props.logged)\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [isLoggedIn, setIsLoggedIn] = useState(token!?.length > 0);\n  console.log(isLoggedIn, token)\n  const handleLoginChange = (e: any) => {\n    setLogin(e.target.value)\n  }\n  const handlePasswordChange = (e: any) => {\n    setPassword(e.target.value)\n  }\n  const handleEmailChange = (e: any) => {\n    setEmail(e.target.value)\n  }\n\n  const handleLogin = async () => {\n    const isValid = lv.validate(login, password);\n    if (!isValid) {\n      console.error(\"nope!\")\n    }\n    const request = new LoginRequest(login, password, email);\n    const response = await POST(\"https://localhost:5001/auth\", request);\n    if (!response.ok) {\n      console.error(\"could not login\");\n      return;\n    }\n    // const response = await fetch(\"https://localhost:5001/auth\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(request)\n    // });\n    const token = await response.text();\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", login);\n    console.log(\"logged in as\", login)\n    setIsLoggedIn(true)\n  }\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem(\"token\", \"\")\n    console.log(localStorage.getItem(\"token\"))\n  }\n  return (\n    <div>\n      {!isLoggedIn ?\n        <>\n          <form>\n            <div className=\"container\">\n              <div className=\"row mt-1\">\n                <div className=\"input-group mb-1\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"basic-addon1\">Login</span>\n                  </div>\n                  <input type=\"text\" onChange={handleLoginChange} className=\"form-control\" placeholder=\"\" aria-label=\"Username\"\n                    aria-describedby=\"basic-addon1\" />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-group mb-1\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"basic-addon1\">Password</span>\n                  </div>\n                  <input type=\"password\" onChange={handlePasswordChange} className=\"form-control\" placeholder=\"\" aria-label=\"Username\"\n                    aria-describedby=\"basic-addon1\" />\n                </div>\n              </div>\n            </div>\n          </form>\n          <button className=\"btn btn-primary btn-block\" onClick={handleLogin} >Login</button>\n        </>\n        :\n        <div className=\"container\">\n          <div className=\"row\">\n            <p>Hey {localStorage.getItem(\"username\")}</p>\n          </div>\n          <div className=\"row\">\n            <button className=\"btn btn-warning\" onClick={handleLogout}>Logout</button>\n          </div>\n        </div>\n\n      }\n    </div>\n  )\n}\n\nexport default Login;","/Users/admin/Documents/dev/oss/connected.ui/src/components/Posts/Post.tsx",["117","118","119"],"import React from \"react\";\nimport { useState } from \"react\";\nimport CreateNewPostComment from \"../../requests/CreateNewPostComment\";\nimport Comment from './Comment'\n\nconst Post = (props: any) => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [isLoggedIn, setIsLoggedIn] = useState(token!?.length > 0);\n  const [post, setPost] = useState<string>();\n  const handlePostChange = (e: any) => {\n    setPost(e.target.value)\n  }\n  const handleSendPost = async () => {\n    console.log(\"post\")\n    const response = await fetch(`https://localhost:5001/groups/${props.groupId}/posts/${props.p.id}/comments`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': \"application/json\",\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(new CreateNewPostComment(post!))\n    })\n    if (response.status !== 200) {\n      console.error(\"nope!\")\n      return\n    }\n\n  }\n  return (\n    <div className=\"container mt-5 shadow p-3 mb-5 bg-white rounded\">\n      <div className=\"post mt-5 shadow-sm p-3 mb-5 bg-white rounded\">\n        <div className=\"row\">\n          <div className=\"col-sm-1\"> <span className=\"\">{props.p.poster.username}</span>\n          </div>\n          <div className=\"col\"><span>{props.p.postDate.substring(0, 10)}</span></div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col mt-1 mb-1\">\n            <span>\n              {props.p.body}\n            </span>\n          </div>\n        </div>\n      </div>\n      <Comment comments={props.p.comments} />\n      <div className=\"input-group mt-2 mb-2\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">🤔</span>\n        </div>\n        <textarea onChange={handlePostChange} placeholder=\"Your comment\" className=\"form-control \" aria-label=\"With textarea\"></textarea>\n      </div>\n      <button className=\"btn btn-primary btn-block\" onClick={handleSendPost} >Add comment</button>\n    </div >\n  )\n}\n\nexport default Post","/Users/admin/Documents/dev/oss/connected.ui/src/requests/RegisterRequest.tsx",["120"],"import { useEffect } from \"react\";\n\nexport default class RegisterRequest {\n  username: string\n  password: string\n  email: string\n  constructor(username: string, password: string, email: string) {\n    this.username = username;\n    this.password = password;\n    this.email = email;\n  }\n\n}\n","/Users/admin/Documents/dev/oss/connected.ui/src/models/CommentModel.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/components/Posts/Comment.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/requests/CreateNewPostComment.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/validators/LoginValidator.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/components/Intro.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/components/GroupList.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/components/Home.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/utils/api.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/components/Groups.tsx",["121","122","123"],"/Users/admin/Documents/dev/oss/connected.ui/src/requests/LoginRequest.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/models/UserModel.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/validators/RegistrationValidator.tsx",[],"/Users/admin/Documents/dev/oss/connected.ui/src/components/Contact.tsx",["124"],"/Users/admin/Documents/dev/oss/connected.ui/src/components/UserPanel.tsx",["125"],"/Users/admin/Documents/dev/oss/connected.ui/src/components/Users/UserView.tsx",[],{"ruleId":"126","severity":1,"message":"127","line":13,"column":10,"nodeType":"128","messageId":"129","endLine":13,"endColumn":15},{"ruleId":"126","severity":1,"message":"130","line":13,"column":17,"nodeType":"128","messageId":"129","endLine":13,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":26,"column":6,"nodeType":"133","endLine":26,"endColumn":8,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":54,"column":7,"nodeType":"137","endLine":54,"endColumn":82},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"126","severity":1,"message":"130","line":11,"column":17,"nodeType":"128","messageId":"129","endLine":11,"endColumn":25},{"ruleId":"126","severity":1,"message":"142","line":12,"column":22,"nodeType":"128","messageId":"129","endLine":12,"endColumn":35},{"ruleId":"126","severity":1,"message":"130","line":12,"column":17,"nodeType":"128","messageId":"129","endLine":12,"endColumn":25},{"ruleId":"126","severity":1,"message":"143","line":21,"column":9,"nodeType":"128","messageId":"129","endLine":21,"endColumn":26},{"ruleId":"126","severity":1,"message":"130","line":7,"column":17,"nodeType":"128","messageId":"129","endLine":7,"endColumn":25},{"ruleId":"126","severity":1,"message":"144","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":20},{"ruleId":"126","severity":1,"message":"142","line":8,"column":22,"nodeType":"128","messageId":"129","endLine":8,"endColumn":35},{"ruleId":"126","severity":1,"message":"145","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":19},{"ruleId":"126","severity":1,"message":"130","line":7,"column":17,"nodeType":"128","messageId":"129","endLine":7,"endColumn":25},{"ruleId":"131","severity":1,"message":"146","line":29,"column":6,"nodeType":"133","endLine":29,"endColumn":8,"suggestions":"147"},{"ruleId":"135","severity":1,"message":"136","line":82,"column":11,"nodeType":"137","endLine":82,"endColumn":89},{"ruleId":"135","severity":1,"message":"136","line":23,"column":11,"nodeType":"137","endLine":23,"endColumn":66},{"ruleId":null,"fatal":true,"severity":2,"message":"148","line":20,"column":20},"@typescript-eslint/no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchGroup'. Either include it or remove the dependency array.","ArrayExpression",["149"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'setIsLoggedIn' is assigned a value but never used.","'handleEmailChange' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'groups'. Either include it or remove the dependency array.",["152"],"Parsing error: Expression expected.",{"desc":"153","fix":"154"},"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [fetchGroup]",{"range":"157","text":"158"},"Update the dependencies array to be: [groups]",{"range":"159","text":"160"},[970,972],"[fetchGroup]",[928,930],"[groups]"]