[{"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\index.tsx":"1","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\reportWebVitals.ts":"2","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\App.tsx":"3","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Navigation.tsx":"4","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\UserPanel.tsx":"5","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Home.tsx":"6","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Contact.tsx":"7","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Groups.tsx":"8","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Groups\\Group.tsx":"9","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Intro.tsx":"10","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\CreateNewGroup.tsx":"11","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\models\\GroupModel.tsx":"12","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\GroupList.tsx":"13","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Users\\Login.tsx":"14","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Users\\Register.tsx":"15","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\CreateNewPost.tsx":"16","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\models\\PostModel.tsx":"17","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Posts\\Post.tsx":"18","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\LoginRequest.tsx":"19","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\RegisterRequest.tsx":"20","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\validators\\RegistrationValidator.tsx":"21","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\validators\\LoginValidator.tsx":"22","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\models\\UserModel.tsx":"23","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\models\\CommentModel.tsx":"24","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Posts\\Comment.tsx":"25","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\CreateNewPostComment.tsx":"26"},{"size":517,"mtime":1607506146741,"results":"27","hashOfConfig":"28"},{"size":440,"mtime":1607506146742,"results":"29","hashOfConfig":"28"},{"size":894,"mtime":1607547860459,"results":"30","hashOfConfig":"28"},{"size":1330,"mtime":1607547880345,"results":"31","hashOfConfig":"28"},{"size":1107,"mtime":1607547860462,"results":"32","hashOfConfig":"28"},{"size":1812,"mtime":1607506972792,"results":"33","hashOfConfig":"28"},{"size":4701,"mtime":1607633231808,"results":"34","hashOfConfig":"28"},{"size":2906,"mtime":1607547860461,"results":"35","hashOfConfig":"28"},{"size":2349,"mtime":1607632618223,"results":"36","hashOfConfig":"28"},{"size":2134,"mtime":1607506946211,"results":"37","hashOfConfig":"28"},{"size":293,"mtime":1607527706256,"results":"38","hashOfConfig":"28"},{"size":658,"mtime":1607547860466,"results":"39","hashOfConfig":"28"},{"size":3438,"mtime":1607628552465,"results":"40","hashOfConfig":"28"},{"size":1977,"mtime":1607628552468,"results":"41","hashOfConfig":"28"},{"size":1833,"mtime":1607628552469,"results":"42","hashOfConfig":"28"},{"size":114,"mtime":1607547860467,"results":"43","hashOfConfig":"28"},{"size":711,"mtime":1607628552471,"results":"44","hashOfConfig":"28"},{"size":1810,"mtime":1607632618224,"results":"45","hashOfConfig":"28"},{"size":218,"mtime":1607547860468,"results":"46","hashOfConfig":"28"},{"size":300,"mtime":1607527668466,"results":"47","hashOfConfig":"28"},{"size":186,"mtime":1607527668467,"results":"48","hashOfConfig":"28"},{"size":159,"mtime":1607547860468,"results":"49","hashOfConfig":"28"},{"size":301,"mtime":1607547860467,"results":"50","hashOfConfig":"28"},{"size":462,"mtime":1607628552470,"results":"51","hashOfConfig":"28"},{"size":385,"mtime":1607628552467,"results":"52","hashOfConfig":"28"},{"size":120,"mtime":1607628552472,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"d0zo1l",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\index.tsx",[],["114","115"],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\reportWebVitals.ts",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\App.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Navigation.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\UserPanel.tsx",["116","117","118","119","120"],"import React, { useState } from \"react\"\r\nimport Register from './Users/Register'\r\nimport Login from './Users/Login'\r\n\r\nconst UserPanel = () => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const [isLoggedIn, setIsLoggedIn] = useState(token!?.length > 0);\r\n  console.log(token, isLoggedIn)\r\n  const [tab, setTab] = useState(0);\r\n  const handleChangeTab = (tab: number) => {\r\n    setTab(tab);\r\n  }\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs\" >\r\n        <li className=\"nav-item\" onClick={() => handleChangeTab(0)} >\r\n          <a className=\"nav-link\" id=\"home-tab\" data-toggle=\"tab\" href=\"#\" aria-controls=\"home\"\r\n            aria-selected=\"true\">Login</a>\r\n        </li>\r\n        <li className=\"nav-item\" onClick={() => handleChangeTab(1)} >\r\n          <a className=\"nav-link\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#\" role=\"tab\" aria-controls=\"profile\"\r\n            aria-selected=\"false\">Register</a>\r\n        </li>\r\n      </ul>\r\n      {tab === 0 ? <Login logged={isLoggedIn} /> : <Register logged={isLoggedIn} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserPanel","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Home.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Contact.tsx",["121"],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Groups.tsx",["122","123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport GroupModel, { fromJson } from \"../models/GroupModel\";\r\nimport CreateNewGroup from '../requests/CreateNewGroup'\r\nimport GroupList from './GroupList'\r\n\r\nexport const Groups = () => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [groups, setGroups] = useState<GroupModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      console.log('uef')\r\n\r\n      const response = await fetch(\"https://localhost:5001/groups\")\r\n      console.log(response);\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      const gs = data.map((gr: any) => fromJson(gr))\r\n      setGroups(g => [...g, ...gs])\r\n      console.log(groups)\r\n    }\r\n    fetchGroups()\r\n  }, [])\r\n\r\n\r\n  const handleGroupNameChange = (ev: any) => {\r\n    setGroupName(ev.target.value);\r\n  }\r\n  const handleDescriptionChange = (ev: any) => {\r\n    setDescription(ev.target.value)\r\n  }\r\n  const handleCreateGroup = async () => {\r\n    console.log(groupName, description)\r\n    const request = new CreateNewGroup(groupName, description);\r\n    const response = await fetch(\"https://localhost:5001/groups\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify(request)\r\n    })\r\n    if (response.status !== 500) {\r\n      setGroups(groups => [...groups, fromJson(request)]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {groups.length > 0 ?\r\n        <GroupList groups={groups} />\r\n        :\r\n        <p>nope</p>\r\n      }\r\n\r\n      <div className=\"create-group mt-5 shadow-sm p-3 mb-5 bg-white rounded\">\r\n        <p className=\"lead\">Nothing that suits your interests? Create your own group!</p>\r\n        <div className=\"container mb-5 mt-5\">\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Group name</span>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" onChange={handleGroupNameChange} />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Description</span>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" onChange={handleDescriptionChange} />\r\n          </div>\r\n          <a onClick={handleCreateGroup} className=\"btn btn-primary btn-block\" href=\"#\">Create</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Groups;","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Groups\\Group.tsx",["125","126","127"],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Intro.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\CreateNewGroup.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\models\\GroupModel.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\GroupList.tsx",["128","129","130","131","132","133","134","135"],"import { group } from \"console\";\r\nimport React, { useState } from \"react\"\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport GroupModel from '../models/GroupModel'\r\n\r\nconst GroupList = (props: any) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  let history = useHistory();\r\n  const handleSearchChange = (e: any) => {\r\n    setSearch(e.target.value)\r\n  }\r\n  const handleJoinGroup = (groupId: number) => {\r\n    console.log(groupId)\r\n    history.push(`/groups/${groupId}`)\r\n  }\r\n  return (\r\n    <div className=\"list-group mt-5 shadow-sm p-3 mb-5 bg-white rounded\">\r\n      <div className=\"input-group mb-3\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">🔍</span>\r\n        </div>\r\n\r\n\r\n        <input type=\"text\" className=\"form-control\" onChange={handleSearchChange} placeholder=\"Search by keywords or tags\" aria-label=\"Search\"\r\n          aria-describedby=\"basic-addon1\" />\r\n      </div>\r\n\r\n      <ul className=\"groups-list\">\r\n        {props.groups.filter((g: GroupModel) => g.name.includes(search)).map((g: GroupModel) => {\r\n          return (\r\n            <li>\r\n              <a href=\"#\" key={g.id} className=\"list-group-item list-group-item-action\">{g.name}\r\n                {/* <p className=\"badge badge-success\">3 Online</p> */}\r\n                <button className=\"btn btn-primary\" onClick={() => handleJoinGroup(g.id)}  >Join group</button>\r\n              </a>\r\n            </li>\r\n          )\r\n        })}\r\n        {/* <li><a href=\"#collapse1\" data-toggle=\"collapse\" className=\"list-group-item list-group-item-action\">Niderlandzki ster ⚓<span className=\"badge badge-success\">3 Online</span></a></li>\r\n                <li><a href=\"#collapse1\" data-toggle=\"collapse\" className=\"list-group-item list-group-item-action\">dotnet folks 🖥<span className=\"badge badge-success\">23 Online</span></a></li>\r\n                <li><a href=\"#collapse1\" data-toggle=\"collapse\" className=\"list-group-item list-group-item-action\">PHP therapy group 🏥<span className=\"badge badge-success\">33 Online</span></a></li> */}\r\n      </ul>\r\n\r\n\r\n      <div id=\"collapse3\" className=\"panel-collapse collapse list-group-item\">\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\"><a href=\"./user.html\">User #1</a></li>\r\n          <li className=\"list-group-item\"><a href=\"./user.html\">User #2</a></li>\r\n          <li className=\"list-group-item\"><a href=\"./user.html\">User #3</a></li>\r\n          <li className=\"list-group-item\"><a href=\"./user.html\">User #4</a></li>\r\n          <li className=\"list-group-item\"><a href=\"./user.html\">User #5</a></li>\r\n          <li className=\"list-group-item\"><a href=\"./user.html\">User #6</a></li>\r\n          <li className=\"list-group-item\"><a href=\"./user.html\">User #7</a></li>\r\n          <a className=\"btn btn-primary\" href=\"./group.html\">Join group</a>\r\n        </ul>\r\n      </div>\r\n      <ul className=\"pagination mt-3 \" >\r\n        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">Previous</a></li>\r\n        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\r\n        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\r\n        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\r\n        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">Next</a></li>\r\n      </ul>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default GroupList","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Users\\Login.tsx",["136","137"],"import { useState } from \"react\";\r\nimport { lv } from \"../../validators/LoginValidator\";\r\nimport LoginRequest from '../../requests/LoginRequest'\r\nimport React from \"react\";\r\n\r\nconst Login = (props: any) => {\r\n  console.log(props.logged)\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const [isLoggedIn, setIsLoggedIn] = useState(token!?.length > 0);\r\n  console.log(isLoggedIn, token)\r\n  const handleLoginChange = (e: any) => {\r\n    setLogin(e.target.value)\r\n  }\r\n  const handlePasswordChange = (e: any) => {\r\n    setPassword(e.target.value)\r\n  }\r\n  const handleEmailChange = (e: any) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  const handleLogin = async () => {\r\n    const isValid = lv.validate(login, password);\r\n    if (!isValid) {\r\n      console.error(\"nope!\")\r\n    }\r\n    const request = new LoginRequest(login, password, email);\r\n    const response = await fetch(\"https://localhost:5001/auth\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(request)\r\n    });\r\n    const token = await response.text();\r\n    localStorage.setItem(\"token\", token);\r\n    console.log(\"logged in\")\r\n    setIsLoggedIn(true)\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    localStorage.setItem(\"token\", \"\")\r\n    console.log(localStorage.getItem(\"token\"))\r\n  }\r\n  return (\r\n    <div>\r\n      {!isLoggedIn ?\r\n        <>\r\n          <form>\r\n            <input type=\"text\" onChange={handleLoginChange} />\r\n            <input type=\"password\" onChange={handlePasswordChange} />\r\n          </form>\r\n          <button className=\"btn btn-primary\" onClick={handleLogin} >Login</button>\r\n        </>\r\n        :\r\n        <button className=\"btn btn-warning\" onClick={handleLogout}>Logout</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Users\\Register.tsx",["138","139"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport RegisterRequest from \"../../requests/RegisterRequest\";\r\nimport { v } from \"../../validators/RegistrationValidator\";\r\n\r\nconst Register = (props: any) => {\r\n  console.log(props.logged)\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const [isLoggedIn, setIsLoggedIn] = useState(token!?.length > 0);\r\n\r\n\r\n  const handleLoginChange = (e: any) => {\r\n    setLogin(e.target.value)\r\n  }\r\n  const handlePasswordChange = (e: any) => {\r\n    setPassword(e.target.value)\r\n  }\r\n  const handleEmailChange = (e: any) => {\r\n    setEmail(e.target.value)\r\n  }\r\n  const handleRegister = async () => {\r\n    const isValid = v.validate(login, password, email);\r\n    if (!isValid) {\r\n      console.error(\"nope!\");\r\n    }\r\n\r\n    const request = new RegisterRequest(login, password, email);\r\n    const response = await fetch(\"https://localhost:5001/users\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(request)\r\n    })\r\n    console.log(response.status)\r\n    if (response.status !== 201) {\r\n      console.error(\"something went wrong\")\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      {!isLoggedIn ?\r\n        <>\r\n          <form>\r\n            <input type=\"text\" onChange={handleLoginChange} />\r\n            <input type=\"password\" onChange={handlePasswordChange} />\r\n            <input type=\"email\" onChange={handleEmailChange} />\r\n          </form>\r\n          <button className=\"btn btn-primary\" onClick={handleRegister} >Register</button>\r\n        </> : <p>Please logout first to create another account</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\CreateNewPost.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\models\\PostModel.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Posts\\Post.tsx",["140","141","142"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport CreateNewPostComment from \"../../requests/CreateNewPostComment\";\r\nimport Comment from './Comment'\r\n\r\nconst Post = (props: any) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const [isLoggedIn, setIsLoggedIn] = useState(token!?.length > 0);\r\n  const [post, setPost] = useState<string>();\r\n  const handlePostChange = (e: any) => {\r\n    setPost(e.target.value)\r\n  }\r\n  const handleSendPost = async () => {\r\n    console.log(\"post\")\r\n    const response = await fetch(`https://localhost:5001/groups/${props.groupId}/posts/${props.p.id}/comments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': \"application/json\",\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify(new CreateNewPostComment(post!))\r\n    })\r\n    if (response.status !== 200) {\r\n      console.error(\"nope!\")\r\n      return\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"post mt-2 mb-2\" key={props.p.id}>\r\n      <p>Author : {props.p.poster.username}</p>\r\n      <p>Content : {props.p.body}</p>\r\n      <p>Posted at : {props.p.postDate}</p>\r\n      <Comment comments={props.p.comments} />\r\n      <div className=\"input-group mt-2 mb-2\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\">🤔</span>\r\n        </div>\r\n        <textarea onChange={handlePostChange} placeholder=\"Your comment\" className=\"form-control \" aria-label=\"With textarea\"></textarea>\r\n      </div>\r\n      {/* <input type=\"text\" placeholder=\"Your post\" onChange={handlePostChange} /> */}\r\n      <button className=\"btn btn-primary btn-block\" onClick={handleSendPost} >Add comment</button>\r\n    </div >\r\n\r\n  )\r\n}\r\n\r\nexport default Post","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\LoginRequest.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\RegisterRequest.tsx",["143"],"import { useEffect } from \"react\";\r\n\r\nexport default class RegisterRequest {\r\n  username: string\r\n  password: string\r\n  email: string\r\n  constructor(username: string, password: string, email: string) {\r\n    this.username = username;\r\n    this.password = password;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n","C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\validators\\RegistrationValidator.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\validators\\LoginValidator.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\models\\UserModel.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\models\\CommentModel.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\components\\Posts\\Comment.tsx",[],"C:\\Users\\mo\\Documents\\dev\\connected.ui\\src\\requests\\CreateNewPostComment.tsx",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":6,"column":17,"nodeType":"150","messageId":"151","endLine":6,"endColumn":25},{"ruleId":"148","severity":1,"message":"152","line":7,"column":22,"nodeType":"150","messageId":"151","endLine":7,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":17,"column":11,"nodeType":"155","endLine":18,"endColumn":34},{"ruleId":"156","severity":1,"message":"157","line":17,"column":11,"nodeType":"155","endLine":18,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":21,"column":11,"nodeType":"155","endLine":22,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":23,"column":11,"nodeType":"155","endLine":23,"endColumn":66},{"ruleId":"148","severity":1,"message":"149","line":7,"column":17,"nodeType":"150","messageId":"151","endLine":7,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":27,"column":6,"nodeType":"160","endLine":27,"endColumn":8,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"154","line":75,"column":11,"nodeType":"155","endLine":75,"endColumn":89},{"ruleId":"148","severity":1,"message":"149","line":13,"column":17,"nodeType":"150","messageId":"151","endLine":13,"endColumn":25},{"ruleId":"158","severity":1,"message":"162","line":25,"column":6,"nodeType":"160","endLine":25,"endColumn":8,"suggestions":"163"},{"ruleId":"153","severity":1,"message":"154","line":63,"column":7,"nodeType":"155","endLine":63,"endColumn":82},{"ruleId":"148","severity":1,"message":"164","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":15},{"ruleId":"148","severity":1,"message":"165","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":32,"column":15,"nodeType":"155","endLine":32,"endColumn":89},{"ruleId":"153","severity":1,"message":"154","line":58,"column":35,"nodeType":"155","endLine":58,"endColumn":69},{"ruleId":"153","severity":1,"message":"154","line":59,"column":35,"nodeType":"155","endLine":59,"endColumn":69},{"ruleId":"153","severity":1,"message":"154","line":60,"column":35,"nodeType":"155","endLine":60,"endColumn":69},{"ruleId":"153","severity":1,"message":"154","line":61,"column":35,"nodeType":"155","endLine":61,"endColumn":69},{"ruleId":"153","severity":1,"message":"154","line":62,"column":35,"nodeType":"155","endLine":62,"endColumn":69},{"ruleId":"148","severity":1,"message":"149","line":11,"column":17,"nodeType":"150","messageId":"151","endLine":11,"endColumn":25},{"ruleId":"148","severity":1,"message":"166","line":20,"column":9,"nodeType":"150","messageId":"151","endLine":20,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":11,"column":17,"nodeType":"150","messageId":"151","endLine":11,"endColumn":25},{"ruleId":"148","severity":1,"message":"152","line":12,"column":22,"nodeType":"150","messageId":"151","endLine":12,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":7,"column":17,"nodeType":"150","messageId":"151","endLine":7,"endColumn":25},{"ruleId":"148","severity":1,"message":"167","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":20},{"ruleId":"148","severity":1,"message":"152","line":8,"column":22,"nodeType":"150","messageId":"151","endLine":8,"endColumn":35},{"ruleId":"148","severity":1,"message":"168","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":19},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'setToken' is assigned a value but never used.","Identifier","unusedVar","'setIsLoggedIn' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-selected is not supported by the role link. This role is implicit on the element a.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'groups'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has a missing dependency: 'fetchGroup'. Either include it or remove the dependency array.",["172"],"'group' is defined but never used.","'Redirect' is defined but never used.","'handleEmailChange' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [groups]",{"range":"177","text":"178"},"Update the dependencies array to be: [fetchGroup]",{"range":"179","text":"180"},[888,890],"[groups]",[897,899],"[fetchGroup]"]